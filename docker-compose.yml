services:

  php-apache:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: application-app
    volumes:
      - ./html:/var/www/html
      - ./container-conf/openssl-keys:/app/openssl-keys
    networks:
      - application_network
    env_file:
      - ./html/.env
    ports:
      - "8180:80"


  mysql:
    image: mysql:8.1.0
    container_name: application-mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: application_db
      MYSQL_USER: application
      MYSQL_PASSWORD: application123
    volumes:
      - mysql_data:/var/lib/mysql
      - ./db-conf:/var/db-conf
    networks:
      - application_network
    ports:
      - "3316:3306"


  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./observability-conf/prometheus.yaml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9190:9090"
    networks:
      - observability-network

  tempo:
    image: grafana/tempo:latest
    container_name: tempo
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./observability-conf/tempo.yaml:/etc/tempo.yaml
      - tempo_data:/tmp/tempo
    ports:
      - "3200:3200"
      - "4319:4319"
    networks:
      - observability-network

  loki:
    image: grafana/loki:latest
    container_name: loki
    volumes:
      - ./observability-conf/loki.yaml:/etc/loki/loki-config.yaml
      - loki_data:/loki
    ports:
      - "3100:3100"
    networks:
      - observability-network

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: otel-collector
    command: [ "--config=/etc/otel-collector-config.yaml" ]
    volumes:
      - ./observability-conf/otel.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4317:4317"
      - "4318:4318"
      - "8888:8888"
      - "8889:8889"
    networks:
      - observability-network
    depends_on:
      - tempo
      - loki
      - prometheus

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
      - tempo
      - loki
    networks:
      - observability-network


networks:
  application_network:
    driver: bridge
  observability-network:
    driver: bridge

volumes:
  mysql_data:
  prometheus_data:
  tempo_data:
  loki_data:
  grafana_data:
